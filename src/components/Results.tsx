import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { MapPin, Trophy, Star, Briefcase, Home, Users, Copy, Download, ArrowLeft } from "lucide-react";
import { useToast } from "@/hooks/use-toast";

export interface CityRecommendation {
  rank: number;
  city: string;
  country: string;
  score: number;
  highlights: string[];
  lifestyleFit: number;
  careerOpportunities: string[];
  costOfLiving: string;
  climate: string;
  population: string;
}

export interface RecommendationResult {
  summary: string;
  topCities: CityRecommendation[];
  insights: {
    climateMatch: string;
    community: string;
    costAnalysis: string;
    personalityFit: string;
  };
  bestOption: {
    city: string;
    reason: string;
    dayInLife: string[];
  };
}

interface ResultsProps {
  results: RecommendationResult;
  onBack: () => void;
  onStartOver: () => void;
}

const Results = ({ results, onBack, onStartOver }: ResultsProps) => {
  const { toast } = useToast();
  const [activeTab, setActiveTab] = useState("overview");

  const copyToClipboard = () => {
    const resultsText = `
New Life Explorer Results
========================

${results.summary}

Top Recommendations:
${results.topCities.map((city, index) => `
${index + 1}. ${city.city}, ${city.country}
   Score: ${city.score}/100
   Lifestyle Fit: ${city.lifestyleFit}%
   Highlights: ${city.highlights.join(", ")}
   Career Opportunities: ${city.careerOpportunities.join(", ")}
`).join("")}

Best Option: ${results.bestOption.city}
${results.bestOption.reason}

Insights:
- Climate: ${results.insights.climateMatch}
- Community: ${results.insights.community}
- Cost Analysis: ${results.insights.costAnalysis}
- Personality Fit: ${results.insights.personalityFit}
    `;

    navigator.clipboard.writeText(resultsText);
    toast({
      title: "Results copied!",
      description: "Your results have been copied to the clipboard.",
    });
  };

  const downloadResults = () => {
    const resultsText = `
New Life Explorer Results
========================

Generated on: ${new Date().toLocaleDateString()}

${results.summary}

Top Recommendations:
${results.topCities.map((city, index) => `
${index + 1}. ${city.city}, ${city.country}
   Score: ${city.score}/100
   Lifestyle Fit: ${city.lifestyleFit}%
   Climate: ${city.climate}
   Population: ${city.population}
   Cost of Living: ${city.costOfLiving}
   
   Highlights: ${city.highlights.join(", ")}
   Career Opportunities: ${city.careerOpportunities.join(", ")}
`).join("")}

Best Option: ${results.bestOption.city}
${results.bestOption.reason}

Day in Life Simulation:
${results.bestOption.dayInLife.map((activity, index) => `${index + 1}. ${activity}`).join("\n")}

Additional Insights:
- Climate Match: ${results.insights.climateMatch}
- Community: ${results.insights.community}
- Cost Analysis: ${results.insights.costAnalysis}
- Personality Fit: ${results.insights.personalityFit}

---
Generated by New Life Explorer
    `;

    const blob = new Blob([resultsText], { type: "text/plain" });
    const url = URL.createObjectURL(blob);
    const a = document.createElement("a");
    a.href = url;
    a.download = `new-life-explorer-results-${new Date().toISOString().split("T")[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);

    toast({
      title: "Results downloaded!",
      description: "Your results have been saved as a text file.",
    });
  };

  return (
    <div className="min-h-screen bg-gradient-secondary py-12 px-6">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="text-center mb-12">
          <div className="flex justify-center mb-6">
            <div className="w-16 h-16 bg-gradient-primary rounded-2xl flex items-center justify-center shadow-strong">
              <Trophy className="w-8 h-8 text-white" />
            </div>
          </div>
          <h1 className="text-4xl font-bold text-foreground mb-4">
            Your Perfect Places Await!
          </h1>
          <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
            Based on your preferences, here are the best locations for your new life adventure.
          </p>
        </div>

        {/* AI Summary */}
        <Card className="mb-8 shadow-medium">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Star className="w-5 h-5 text-primary" />
              AI Analysis Summary
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-foreground leading-relaxed">{results.summary}</p>
          </CardContent>
        </Card>

        {/* Top Cities Table */}
        <Card className="mb-8 shadow-medium">
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <MapPin className="w-5 h-5 text-primary" />
              Top 3 Recommendations
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-6">
              {results.topCities.map((city) => (
                <div
                  key={city.rank}
                  className={`p-6 rounded-lg border transition-all hover:shadow-medium ${
                    city.rank === 1
                      ? "bg-gradient-to-r from-blue-50 to-purple-50 border-primary/20"
                      : "bg-background border-border"
                  }`}
                >
                  <div className="flex items-start justify-between mb-4">
                    <div className="flex items-center gap-4">
                      <div
                        className={`w-10 h-10 rounded-full flex items-center justify-center font-bold text-white ${
                          city.rank === 1
                            ? "bg-gradient-primary"
                            : city.rank === 2
                            ? "bg-blue-500"
                            : "bg-blue-400"
                        }`}
                      >
                        {city.rank}
                      </div>
                      <div>
                        <h3 className="text-xl font-semibold text-foreground">
                          {city.city}, {city.country}
                        </h3>
                        <div className="flex items-center gap-4 mt-1 text-sm text-muted-foreground">
                          <span>Population: {city.population}</span>
                          <span>Climate: {city.climate}</span>
                          <span>Cost: {city.costOfLiving}</span>
                        </div>
                      </div>
                    </div>
                    <div className="text-right">
                      <div className="text-2xl font-bold text-primary">{city.score}/100</div>
                      <div className="text-sm text-muted-foreground">Overall Score</div>
                    </div>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <h4 className="font-semibold text-foreground mb-2 flex items-center gap-2">
                        <Home className="w-4 h-4" />
                        Lifestyle Fit
                      </h4>
                      <Progress value={city.lifestyleFit} className="mb-2" />
                      <div className="text-sm text-muted-foreground">{city.lifestyleFit}% match</div>
                    </div>

                    <div>
                      <h4 className="font-semibold text-foreground mb-2 flex items-center gap-2">
                        <Briefcase className="w-4 h-4" />
                        Career Opportunities
                      </h4>
                      <div className="flex flex-wrap gap-1">
                        {city.careerOpportunities.map((opportunity, index) => (
                          <Badge key={index} variant="secondary" className="text-xs">
                            {opportunity}
                          </Badge>
                        ))}
                      </div>
                    </div>
                  </div>

                  <div className="mt-4">
                    <h4 className="font-semibold text-foreground mb-2">Highlights</h4>
                    <div className="flex flex-wrap gap-2">
                      {city.highlights.map((highlight, index) => (
                        <Badge key={index} variant="outline" className="text-xs">
                          {highlight}
                        </Badge>
                      ))}
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* Best Option */}
        <Card className="mb-8 shadow-medium border-primary/20">
          <CardHeader>
            <CardTitle className="flex items-center gap-2 text-primary">
              <Star className="w-5 h-5" />
              Recommended Best Choice: {results.bestOption.city}
            </CardTitle>
          </CardHeader>
          <CardContent>
            <p className="text-foreground mb-4">{results.bestOption.reason}</p>
            
            <h4 className="font-semibold text-foreground mb-3">A Day in Your Life in {results.bestOption.city}:</h4>
            <div className="space-y-2">
              {results.bestOption.dayInLife.map((activity, index) => (
                <div key={index} className="flex items-center gap-3 text-sm">
                  <div className="w-6 h-6 bg-primary/10 rounded-full flex items-center justify-center text-primary font-semibold text-xs">
                    {index + 1}
                  </div>
                  <span>{activity}</span>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>

        {/* Additional Insights */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
          <Card className="shadow-medium">
            <CardHeader>
              <CardTitle className="text-lg flex items-center gap-2">
                <Users className="w-5 h-5 text-primary" />
                Community & Climate
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <h4 className="font-semibold text-foreground mb-1">Climate Match</h4>
                <p className="text-sm text-muted-foreground">{results.insights.climateMatch}</p>
              </div>
              <div>
                <h4 className="font-semibold text-foreground mb-1">Community</h4>
                <p className="text-sm text-muted-foreground">{results.insights.community}</p>
              </div>
            </CardContent>
          </Card>

          <Card className="shadow-medium">
            <CardHeader>
              <CardTitle className="text-lg flex items-center gap-2">
                <Briefcase className="w-5 h-5 text-primary" />
                Financial & Personal
              </CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              <div>
                <h4 className="font-semibold text-foreground mb-1">Cost Analysis</h4>
                <p className="text-sm text-muted-foreground">{results.insights.costAnalysis}</p>
              </div>
              <div>
                <h4 className="font-semibold text-foreground mb-1">Personality Fit</h4>
                <p className="text-sm text-muted-foreground">{results.insights.personalityFit}</p>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Action Buttons */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
          <Button
            onClick={copyToClipboard}
            variant="outline"
            className="flex items-center gap-2"
          >
            <Copy className="w-4 h-4" />
            Copy Results
          </Button>

          <Button
            onClick={downloadResults}
            variant="outline"
            className="flex items-center gap-2"
          >
            <Download className="w-4 h-4" />
            Save as Text
          </Button>

          <Button
            onClick={onStartOver}
            className="bg-gradient-primary hover:opacity-90 flex items-center gap-2"
          >
            Explore More Places
          </Button>
        </div>

        {/* Back button */}
        <div className="mt-8 text-center">
          <Button
            variant="ghost"
            onClick={onBack}
            className="flex items-center gap-2"
          >
            <ArrowLeft className="w-4 h-4" />
            Back to Form
          </Button>
        </div>
      </div>
    </div>
  );
};

export default Results;